name: CI/CD - Markify

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Docker Hub login
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker images
      - name: Build Docker image
        run: docker compose -f docker-compose.yml build

      - name: Push Docker image
        run: docker compose push

      # Create deployment and capture ID
      - name: Create GitHub Deployment
        id: create-deployment
        run: |
          RESPONSE=$(curl -s -XPOST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"ref":"main","environment":"production","auto_merge":false}' \
          https://api.github.com/repos/${{ github.repository }}/deployments)
          
          DEPLOYMENT_ID=$(echo $RESPONSE | jq -r '.id')
          echo "DEPLOYMENT_ID=$DEPLOYMENT_ID" >> $GITHUB_OUTPUT

      # Deploy to VPS
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script: |
            cd /root/CICD/Markify
            docker compose pull
            docker compose up -d

      # Update deployment status
      - name: Update Deployment Status
        run: |
          curl -XPOST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"state":"success"}' \
          https://api.github.com/repos/${{ github.repository }}/deployments/${{ steps.create-deployment.outputs.DEPLOYMENT_ID }}/statuses
