name: CI/CD - Markify

on:
  push:
    branches:
      - main  # Trigger automatic deployment on the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker compose -f docker-compose.yml build

      # Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker compose push

      # Create Deployment for Production
      - name: Create GitHub Deployment for Production
        id: create_deployment
        run: |
          RESPONSE=$(curl -XPOST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d '{"ref":"main","environment":"production"}' \
          https://api.github.com/repos/${{ github.repository }}/deployments)
          
          # Extract deployment ID
          DEPLOYMENT_ID=$(echo $RESPONSE | jq .id)
          echo "Deployment ID: $DEPLOYMENT_ID"
          echo "::set-output name=deployment_id::$DEPLOYMENT_ID"

      # Deploy to VPS using SSH with Password
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script: |
            # Navigate to the directory where the Markify app is located on the VPS
            cd /root/CICD/Markify
            # Pull the latest changes and run the application
            docker compose pull
            docker compose up -d

      # Update Deployment Status as Success
      - name: Set Deployment Status as Success
        run: |
          DEPLOYMENT_ID=${{ steps.create_deployment.outputs.deployment_id }}
          curl -XPATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d '{"state":"success"}' \
          https://api.github.com/repos/${{ github.repository }}/deployments/$DEPLOYMENT_ID
